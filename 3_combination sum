class Solution {
public:
    void combination(int ind, int target, int n, vector<int> arr, vector<vector<int>> &ans, vector<int> &ds){
        if(ind==n){
            if(target==0){
                ans.push_back(ds);
            }
            return;
        }

        if(arr[ind]<=target){
            ds.push_back(arr[ind]);
            combination(ind, target-arr[ind], n, arr, ans, ds);
            ds.pop_back();
        }

        combination(ind+1, target, n, arr, ans, ds);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>> ans;
        vector<int> ds;

        int n=candidates.size();
        combination(0, target, n, candidates, ans, ds);
        return ans;

    }
};
